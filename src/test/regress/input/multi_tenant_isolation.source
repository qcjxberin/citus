--
-- MULTI_TENANT_ISOLATION
--
-- Tests tenant isolation feature
--

SET citus.shard_replication_factor TO 1;
SET citus.shard_count to 2;

CREATE SCHEMA tenant_isolation;
SET search_path to tenant_isolation;

CREATE TABLE lineitem_streaming  (
	l_orderkey bigint not null,
	l_partkey integer not null,
	l_suppkey integer not null,
	l_linenumber integer not null,
	l_quantity decimal(15, 2) not null,
	l_extendedprice decimal(15, 2) not null,
	l_discount decimal(15, 2) not null,
	l_tax decimal(15, 2) not null,
	l_returnflag char(1) not null,
	l_linestatus char(1) not null,
	l_shipdate date not null,
	l_commitdate date not null,
	l_receiptdate date not null,
	l_shipinstruct char(25) not null,
	l_shipmode char(10) not null,
	l_comment varchar(44) not null);
SELECT create_distributed_table('lineitem_streaming', 'l_orderkey');

CREATE TABLE orders_streaming  (
	o_orderkey bigint not null,
	o_custkey integer not null,
	o_orderstatus char(1) not null,
	o_totalprice decimal(15,2) not null,
	o_orderdate date not null,
	o_orderpriority char(15) not null,
	o_clerk char(15) not null,
	o_shippriority integer not null,
	o_comment varchar(79) not null);
SELECT create_distributed_table('orders_streaming', 'o_orderkey');

\copy lineitem_streaming FROM '@abs_srcdir@/data/lineitem.1.data' with delimiter '|'
\copy lineitem_streaming FROM '@abs_srcdir@/data/lineitem.2.data' with delimiter '|'
\copy orders_streaming FROM '@abs_srcdir@/data/orders.1.data' with delimiter '|'
\copy orders_streaming FROM '@abs_srcdir@/data/orders.2.data' with delimiter '|'

SELECT count(*) FROM lineitem_streaming;
SELECT count(*) FROM orders_streaming;

SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 99;
SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 100;
SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 101;
SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 102;
SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 103;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 99;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 100;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 101;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 102;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 103;

SELECT * FROM pg_dist_shard ORDER BY shardminvalue::BIGINT, logicalrelid;

SELECT * FROM pg_dist_colocation;

SELECT isolate_tenant_to_new_shard('lineitem_streaming', 100::bigint);
SELECT isolate_tenant_to_new_shard('lineitem_streaming', 101::bigint);

-- create an MX node
SELECT start_metadata_sync_to_node('localhost', :worker_1_port);

SELECT isolate_tenant_to_new_shard('orders_streaming', 102::bigint);
SELECT isolate_tenant_to_new_shard('orders_streaming', 103::bigint);

SELECT isolate_tenant_to_new_shard('lineitem_streaming', 100::bigint);
SELECT isolate_tenant_to_new_shard('orders_streaming', 101::bigint);

SELECT count(*) FROM lineitem_streaming;
SELECT count(*) FROM orders_streaming;

SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 99;
SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 100;
SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 101;
SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 102;
SELECT count(*) FROM lineitem_streaming WHERE l_orderkey = 103;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 99;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 100;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 101;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 102;
SELECT count(*) FROM orders_streaming WHERE o_orderkey = 103;

SELECT * FROM pg_dist_shard ORDER BY shardminvalue::BIGINT, logicalrelid;

SELECT * FROM pg_dist_colocation;

SELECT * FROM pg_dist_shard_placement ORDER BY nodeport, shardid;

-- connect to the worker node with metadata
\c - - - :worker_1_port
SET search_path to tenant_isolation;

-- check mx tables
SELECT count(*) FROM lineitem_streaming;
SELECT count(*) FROM orders_streaming;

-- check shards
\d

-- check MX metadata
SELECT * FROM pg_dist_shard ORDER BY shardminvalue::BIGINT, logicalrelid;

-- return to master node
\c - - - :master_port

-- create an MX node
SELECT stop_metadata_sync_to_node('localhost', :worker_1_port);

DROP SCHEMA tenant_isolation CASCADE;

ALTER SEQUENCE pg_catalog.pg_dist_colocationid_seq RESTART 1;
